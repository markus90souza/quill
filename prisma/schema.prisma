generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    String @id @unique //matches kinde user id
  email String @unique

  File    File[]
  Message Message[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  @@map("users")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id   String @id @default(cuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url      String
  key      String
  messages Message[]

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  User      User?    @relation(fields: [user_id], references: [id])
  user_id   String?

  @@index([user_id])
  @@map("files")
}

model Message {
  id   String @id @default(cuid())
  text String @db.Text()

  isUserMessage Boolean @map(name: "is_user_message")

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  user_id   String?
  User      User?    @relation(fields: [user_id], references: [id])
  file_id   String?
  File      File?    @relation(fields: [file_id], references: [id])

  @@index([user_id])
  @@index([file_id])
  @@map("messages")
}
